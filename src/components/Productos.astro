---
import productosData from '../data/productos.json';
const { equipos, estructuras } = productosData;
---
<section id="Productos" class="bg-gray-50 py-20 px-6 md:px-12 lg:px-20 overflow-hidden relative">
  <div class="text-center mb-16">
    <h2 class="text-4xl md:text-5xl font-bold text-slate-900 mb-4">
      Nuestros <span class="text-orange-500">Productos</span>
    </h2>
    <p class="text-slate-600 max-w-2xl mx-auto">
      Equipos solares y estructuras diseñadas para maximizar tu ahorro energético con tecnología confiable y eficiente.
    </p>
  </div>

  <!-- Carrusel Equipos -->
  <div class="mb-24">
    <h3 class="text-3xl font-bold text-slate-800 mb-8 text-center">Equipos Solares</h3>
    <div class="relative max-w-5xl mx-auto">
      <div class="overflow-hidden rounded-3xl shadow-lg bg-white/80 backdrop-blur-sm">
        <div id="equipos-carousel" class="relative min-h-[600px]">
          {equipos.map((equipo, index) => (
            <div
              class={`equipos-slide absolute inset-0 transition-all duration-500 ${index === 0 ? 'opacity-100' : 'opacity-0'}`}
            >
              <div class="grid md:grid-cols-2 gap-8 p-8 md:p-12 items-center h-full">
                <div class="overflow-hidden rounded-2xl group">
                  <img src={equipo.imagen} alt={equipo.nombre} class="w-full h-[400px] object-cover transition-transform duration-700 group-hover:scale-105" />
                </div>
                <div class="space-y-4">
                  <span class="inline-block px-4 py-1 bg-orange-100 text-orange-600 rounded-full text-sm font-semibold">{equipo.categoria}</span>
                  <h4 class="text-3xl font-bold text-slate-900">{equipo.nombre}</h4>
                  <p class="text-sm text-orange-500 font-semibold">Marca: {equipo.marca}</p>
                  <p class="text-slate-600 text-lg leading-relaxed">{equipo.descripcion}</p>

                  <div class="grid grid-cols-2 gap-3 py-3 text-sm">
                    {equipo.potencia && (
                      <div class="bg-slate-50 p-2 rounded">
                        <span class="text-slate-500">Potencia:</span>
                        <span class="font-semibold text-slate-800 ml-1">{equipo.potencia}</span>
                      </div>
                    )}
                    {equipo.eficiencia && (
                      <div class="bg-slate-50 p-2 rounded">
                        <span class="text-slate-500">Eficiencia:</span>
                        <span class="font-semibold text-slate-800 ml-1">{equipo.eficiencia}</span>
                      </div>
                    )}
                  </div>

                  <ul class="space-y-2 text-slate-600">
                    {equipo.caracteristicas.map((c) => (
                      <li class="flex items-center gap-2"><span class="text-orange-500 font-bold">✓</span>{c}</li>
                    ))}
                  </ul>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <button type="button" id="equipos-prev" class="absolute left-4 top-1/2 -translate-y-1/2 bg-white/90 backdrop-blur-sm text-orange-500 rounded-full w-12 h-12 flex items-center justify-center hover:bg-orange-500 hover:text-white transition shadow-lg z-20 text-2xl font-bold">‹</button>
      <button type="button" id="equipos-next" class="absolute right-4 top-1/2 -translate-y-1/2 bg-white/90 backdrop-blur-sm text-orange-500 rounded-full w-12 h-12 flex items-center justify-center hover:bg-orange-500 hover:text-white transition shadow-lg z-20 text-2xl font-bold">›</button>

      <div id="equipos-dots" class="flex justify-center gap-3 mt-6">
        {equipos.map((_, i) => (
          <button type="button" class={`equipos-dot w-3 h-3 rounded-full transition-all ${i === 0 ? 'bg-orange-500 scale-125' : 'bg-slate-300'}`} data-index={i}></button>
        ))}
      </div>
    </div>
  </div>

  <!-- Carrusel Estructuras -->
  <div>
    <h3 class="text-3xl font-bold text-slate-800 mb-8 text-center">Estructuras y Montajes</h3>
    <div class="relative max-w-5xl mx-auto">
      <div class="overflow-hidden rounded-3xl shadow-lg bg-white/80 backdrop-blur-sm">
        <div id="estructuras-carousel" class="relative min-h-[600px]">
          {estructuras.map((estructura, index) => (
            <div class={`estructuras-slide absolute inset-0 transition-all duration-500 ${index === 0 ? 'opacity-100' : 'opacity-0'}`}>
              <div class="grid md:grid-cols-2 gap-8 p-8 md:p-12 items-center h-full">
                <div class="overflow-hidden rounded-2xl group">
                  <img src={estructura.imagen} alt={estructura.nombre} class="w-full h-[400px] object-cover transition-transform duration-700 group-hover:scale-105" />
                </div>
                <div class="space-y-4">
                  <span class="inline-block px-4 py-1 bg-orange-100 text-orange-600 rounded-full text-sm font-semibold">{estructura.categoria}</span>
                  <h4 class="text-3xl font-bold text-slate-900">{estructura.nombre}</h4>
                  <p class="text-slate-600 text-lg leading-relaxed">{estructura.descripcion}</p>

                  <div class="space-y-2">
                    <div class="bg-slate-50 p-3 rounded-lg">
                      <span class="text-slate-500 text-sm font-semibold block mb-1">Materiales:</span>
                      <ul class="space-y-1">
                        {estructura.materiales.map((m) => <li class="text-slate-700 text-sm">• {m}</li>)}
                      </ul>
                    </div>
                    <div class="grid grid-cols-2 gap-3 text-sm">
                      <div class="bg-slate-50 p-2 rounded">
                        <span class="text-slate-500">Peso promedio:</span>
                        <span class="font-semibold text-slate-800 block">{estructura.peso_promedio}</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <button type="button" id="estructuras-prev" class="absolute left-4 top-1/2 -translate-y-1/2 bg-white/90 backdrop-blur-sm text-orange-500 rounded-full w-12 h-12 flex items-center justify-center hover:bg-orange-500 hover:text-white transition shadow-lg z-20 text-2xl font-bold">‹</button>
      <button type="button" id="estructuras-next" class="absolute right-4 top-1/2 -translate-y-1/2 bg-white/90 backdrop-blur-sm text-orange-500 rounded-full w-12 h-12 flex items-center justify-center hover:bg-orange-500 hover:text-white transition shadow-lg z-20 text-2xl font-bold">›</button>

      <div id="estructuras-dots" class="flex justify-center gap-3 mt-6">
        {estructuras.map((_, i) => (
          <button type="button" class={`estructuras-dot w-3 h-3 rounded-full transition-all ${i === 0 ? 'bg-orange-500 scale-125' : 'bg-slate-300'}`} data-index={i}></button>
        ))}
      </div>
    </div>
  </div>
</section>

<!-- Script del carrusel corregido -->
<script>
  import { gsap } from "gsap";

  document.addEventListener('DOMContentLoaded', () => {
    function createCarousel(carouselId, slideClass, dotClass, prevId, nextId) {
      const carousel = document.getElementById(carouselId);
      if (!carousel) return;

      const slides = Array.from(carousel.querySelectorAll(`.${slideClass}`));
      const dots = Array.from(document.querySelectorAll(`.${dotClass}`));
      if (slides.length === 0) return;

      let current = 0;
      let isAnimating = false;

      // Configurar posición inicial de los slides
      slides.forEach((slide, index) => {
        slide.style.position = 'absolute';
        slide.style.inset = '0';
        slide.style.opacity = index === 0 ? '1' : '0';
        slide.style.zIndex = index === 0 ? '10' : '0';
        slide.style.pointerEvents = index === 0 ? 'auto' : 'none';
      });

      function goTo(index) {
        if (index < 0 || index >= slides.length || index === current || isAnimating) return;
        
        isAnimating = true;
        const previous = current;
        current = index;

        const currentSlide = slides[previous];
        const nextSlide = slides[current];

        // Asegurar que el próximo slide esté encima
        nextSlide.style.zIndex = '11';
        currentSlide.style.zIndex = '10';

        const tl = gsap.timeline({
          onComplete: () => {
            currentSlide.style.zIndex = '0';
            currentSlide.style.pointerEvents = 'none';
            nextSlide.style.zIndex = '10';
            nextSlide.style.pointerEvents = 'auto';
            isAnimating = false;
          }
        });

        // Animación más suave sin cambios de altura
        tl.to(currentSlide, {
          opacity: 0,
          duration: 0.5,
          ease: 'power2.inOut'
        }, 0);

        tl.to(nextSlide, {
          opacity: 1,
          duration: 0.5,
          ease: 'power2.out'
        }, 0);

        // Actualizar dots
        if (dots.length) {
          dots[previous]?.classList.remove('bg-orange-500', 'scale-125');
          dots[previous]?.classList.add('bg-slate-300');
          dots[current]?.classList.remove('bg-slate-300');
          dots[current]?.classList.add('bg-orange-500', 'scale-125');
        }
      }

      // Prevenir comportamiento por defecto en los botones
      function handleButtonClick(e, direction) {
        e.preventDefault();
        e.stopPropagation();
        
        // Prevenir scroll no deseado
        e.currentTarget.blur();
        
        const newIndex = direction === 'next' 
          ? (current === slides.length - 1 ? 0 : current + 1)
          : (current === 0 ? slides.length - 1 : current - 1);
        
        goTo(newIndex);
      }

      // Event listeners para botones
      const prevBtn = document.getElementById(prevId);
      const nextBtn = document.getElementById(nextId);

      if (prevBtn) {
        prevBtn.addEventListener('click', (e) => handleButtonClick(e, 'prev'));
      }

      if (nextBtn) {
        nextBtn.addEventListener('click', (e) => handleButtonClick(e, 'next'));
      }

      // Event listeners para dots
      dots.forEach((dot, i) => {
        dot.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();
          goTo(i);
        });
      });
    }

    // Inicializar carruseles
    createCarousel('equipos-carousel', 'equipos-slide', 'equipos-dot', 'equipos-prev', 'equipos-next');
    createCarousel('estructuras-carousel', 'estructuras-slide', 'estructuras-dot', 'estructuras-prev', 'estructuras-next');

    // Animaciones de entrada
    gsap.from("section h2", { opacity: 0, y: 40, duration: 0.8, ease: "power2.out" });
    gsap.from("section p", { opacity: 0, y: 30, duration: 0.8, delay: 0.2, ease: "power2.out" });
    gsap.from("section h3", { opacity: 0, y: 30, duration: 0.6, stagger: 0.3, delay: 0.3, ease: "power2.out" });
  });
</script>